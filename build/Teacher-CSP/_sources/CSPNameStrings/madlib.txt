..  Copyright (C)  Mark Guzdial, Barbara Ericson, Briana Morrison
    Permission is granted to copy, distribute and/or modify this document
    under the terms of the GNU Free Documentation License, Version 1.3 or
    any later version published by the Free Software Foundation; with
    Invariant Sections being Forward, Prefaces, and Contributor List,
    no Front-Cover Texts, and no Back-Cover Texts.  A copy of the license
    is included in the section entitled "GNU Free Documentation License".

.. |teachernote| image:: Figures/apple.jpg
    :width: 30px
    :align: top
    :alt: teacher note
    
.. |bigteachernote| image:: Figures/apple.jpg
    :width: 50px
    :align: top
    :alt: teacher note
    
.. |runbutton| image:: Figures/run-button.png
    :height: 20px
    :align: top
    :alt: run button

.. |audiobutton| image:: Figures/start-audio-tour.png
    :height: 20px
    :align: top
    :alt: audio tour button

.. 	qnum::
	:start: 1
	:prefix: csp-4-2-

Historias al azar
==================

Tal vez cuando eras pequeño jugaras con tus amigos o amigas a construir historias al azar. Tomábais algunos datos, como el nombre de un amigo, un verbo, y un juego favorito (por ejemplo), y los añadíais dentro de una historia que otro u otra había inventado. Como no conocíais la historia de antemano, os sorprendíais al saber qué le sucedía en ella a vuestro amigo o amiga.

.. activecode:: Story1
   :tour_1: "Line by line tour"; 1: StEx-line1; 2: StEx-line2; 3: StEx-line3; 4: StEx-line4; 5: StEx-line5; 6: StEx-line6; 7: StEx-line7; 8: StEx-line8; 9: StEx-line9; 10: StEx-line10; 11: StEx-line11; 12: StEx-line12; 13: StEx-line13; 14: StEx-line14; 15: StEx-line15;
   :tour_2: "Structural tour"; 1-5: StEx-line1-5; 6-10: StEx-line6-10; 11-15: StEx-line11-15;

   nombre = "Patricia"
   apellido = "Sanchez"
   genero = "una niña"
   direccion = " la Plaza del Ayuntamiento número 2"
   verbo = "comer"
   comienzo = "Erase una vez  " + genero + " que se llamaba " + nombre + "."
   siguiente1 = nombre + " vivia en " + direccion + "."
   siguiente2 = "Un dia, una bruja se acerco a casa de la familia " + apellido + "."
   siguiente3 = "¡La malvada bruja se queria " + verbo + " a " + nombre + "!"
   final = "Pero " + nombre + " se dio cuenta de sus intenciones y se libro de ella."
   print(comienzo)
   print(siguiente1)
   print(siguiente2)
   print (siguiente3)
   print(final)


.. mchoicemf:: 4_2_1_Story1_Q1
   :answer_a: finalReal = nombre + " llamo a la policia y la detuvieron."
   :answer_b: print(nombre + " llamó a la policia y la detuvieron.")
   :answer_c: print("Patricia llamo a la policia y la detuvieron.")
   :correct: b
   :feedback_a: Esta opción sólo sería correcta si añadieras la instrucción <code>print(finalReal)</code> a continuación.
   :feedback_b: Esta es la forma adecuada porque la línea que se imprime incluye el nombre correcto. También puedes construir primero una cadena llamada <code>finalReal</code>, y después imprimirla.
   :feedback_c: Esto <i>podría</i> servir.  Pero si cambias el contenido de la variable <code>nombre</code> éste no  cambiaría al imprimir la historia.  Prueba con una opción más adecuada.

   Imagina que quieres ampliar la historia para que diga algo así: "Patricia llamó a la policía y la detuvieron." ¿Cuál de las siguientes líneas debes añadir para que eso ocurra? (Pista: ¡Es una buena opción *probar* con cada una de ellas!)


**Qué hacer a continuación:** Ejecuta este programa para comprobar qué texto genera, y modifica el contenido de las variables para construir diferentes historías. Prueba con otros nombres, o con verbos distintos. 


.. activecode:: Story2
   :tour_1: "Line by line tour"; 1: story-line1; 2: story-line2; 3: story-line3; 4: story-line4; 5: story-line5; 6: story-line6; 7: story-line7; 8: story-line8; 9: story-line9; 10: story-line10; 11: story-line11; 12: story-line12; 13: story-line13; 14: story-line14; 15: story-line15; 

   nombre = "Sofia"
   apellido = "Diaz"
   genero = "una niña"
   direccion = " la Avenida de la Paz número 8"
   verbo = "cocinar"
   comienzo = "Erase una vez  " + genero + " que se llamaba " + nombre + "."
   siguiente1 = nombre + " vivia en " + direccion + "."
   siguiente2 = "Un dia, una bruja se acerco a casa de la familia " + apellido + "."
   siguiente3 = "¡La malvada bruja se queria " + verbo + " a " + nombre + "!"
   final = "Pero " + nombre + " se dio cuenta de sus intenciones y se libro de ella."
   print(comienzo)
   print(siguiente1)
   print(siguiente2)
   print (siguiente3)
   print(final)

   
.. mchoicemf:: 4_2_2_Story2_Q1
   :answer_a: Sí
   :answer_b: No
   :correct: a
   :feedback_a: La única diferencia es el orden en que se imprimen las líneas, pero el código es el mismo.
   :feedback_b: ¿Lo has ejecutado? Copia el código en el recuadro del programa y ejecútalo.
 
   ¿Imprimirá el siguiente código la historia igual que antes? 
   
   :: 

     firstName = "Sofia"
     lastName = "Diaz"
     gender = "una niña"
     address = "la Avenida de la Paz número 8"
     verb = "cocinar"
     comienzo = "Erase una vez " + gender + " que se llamaba " + nombre + "."
     print(comienzo)
     siguiente1 = nombre + " vivia en " + direccion + "."

     print(siguiente1)
     siguiente2 = "Un dia, una bruja se acerco a casa de la familia " + apellido + "."
     print(siguiente2)
     siguiente3 = "¡La malvada bruja se queria " + verbo + " a " + nombre + "!"
     print(siguiente3)
     final = "Pero " + nombre + " se dio cuenta de sus intenciones y se libro de ella."
     print(final)
     
.. mchoicemf:: 4_2_3_StringVsVariableName
   :answer_a: Cinco es Cinco
   :answer_b: Cinco es 5
   :answer_c: 5 es Cinco
   :answer_d: 5 es 5
   :correct: b
   :feedback_a: No hay comillas delimitando el último Cinco, así que utilizará el valor de la variable Cinco.
   :feedback_b: El primer Cinco está entre comillas, así que se imprimirá la cadena Cinco. Y el segundo Cinco no está entre comillas, así que se imprimirá el valor de la variable Cinco.
   :feedback_c: El primer "Cinco" está entre comillas, y el segundo no.
   :feedback_d: El primer Cinco está entre comillas así que es una cadena, y por tanto se imprimirán todos los caracteres que contiene.
 
   ¿Qué imprimirá el siguiente código?
   
   :: 

     Cinco = 5
     print("Cinco" + " es " + str(Cinco))
     
.. Note::
   Cuando en Python se imprime una cadena (una secuencia de caracteres encerrados entre comillas simples o dobles) se imprimirán exactamente sus caracteres, tal como se han especificado entre las comillas. Cuando se imprime una variable, lo que se imprimirá será el valor de la variable.
     
.. parsonsprob:: 4_2_4_Poem

   Coloca los bloques siguientes en el orden correcto para que se imprima una conocido trabalenguas.     
   -----
   print("El cielo está enladrillado.")  	
   ===== 
   print("Quién lo desenladrillará.)
   =====                
   print("El desenladrillador que lo desenladrille.")
   =====
   print("Buen desenladrillador será.")
     
.. parsonsprob:: 4_2_5_Story

   Put the blocks below into the correct order to declare the variables and then print the following story. One day Jay went shopping.  He wanted to buy shoes.  But, he didn't like any.  So, Jay went home. 
   Coloca los siguientes bloques en el orden adecuado para declarar primero las variables e imprimir después la siguiente historia. Un día Juan fue a la tienda. Quería comprar unos zapatos. Pero ningún le gustó. Así que Juan regresó a casa.  
   -----
   nombre = "Juan"
   cosa = "unos zapatos"
   =====
   print("Un día " + nombre + " fue a la tienda.")  	
   ===== 
   print("Quéria comprar " + cosa + ".")
   =====                
   print("Pero ninguno le gustó.")
   =====
   print("Así que " + nombre + " regresó a casa.")
   

